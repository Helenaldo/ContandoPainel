CONTANDO PAINEL
Módulo API do Contando que irá fazer a gestão da contabilidade

0) AÇÕES QUANDO SUBIR PARA PRODUÇÃO
0.1) Definir no .env o caminho base para o verify-email quando
     clicar no envio do email (http://localhost:8001/verify-email)
0.2) No EmailVerificationController, no método verifyEmail, tem quer colocar o redirect para login
     com a mensagem (Usuário confirmardo com Sucesso, faça o login)

<!-- 1) Criar model e migrate de Cidade -->
<!-- 2) Criar model e migrate de Tenant -->
<!-- 3) Criar migrate update de User para receber o id do Tenant -->
<!-- 4) Alimentar o banco de dados cidades -->
<!-- 5) Criar as requests do Store e Update Tenant -->
6) Criar TenantResource para retornar um item e TenantCollection para retornar uma coleção


7) Ativação de conta
<!-- 7.1) Primeiro email, de boas vindas, deve confirmar o e-mail e criar uma senha definitiva para o usuário.
        Neste e-mail o usuário deve receber a senha provisória e o código do contrato. -->
<!-- 7.2) Criar um formulário de ativação de conta, onde o usuário vai digitar o código do contrato e a senha provisória -->
<!-- 7.3) Colocar para gerar senha provisória aleatória no TenantController e enviar para o usuário via email. -->

8) DEFINIÇÕES E CONFIGURAÇÃO DO MULT-TENANT - ARQUITETURA 54 minutos
https://www.youtube.com/watch?v=R76u2TkZ75U&list=PL7ScB28KYHhG7zRAiiPrFkQlPUr4n95oj
8.1) Colocado index() na coluna tenant_id da migrate User para performar melhor;
8.2) Observação: Tabelas comuns para todos não precisa do tenant_id
8.3) Criado arquivo Model/Scopes/TenantScope para padronizar as consultas no DB
8.4) Criado a Trait App\Model\Traits\TanantTable para
8.5) Criado o Listener para setar o tanatId na sessão (SetTenantIdSession.php)
8.6) Adicionado em AppServiceProvider para chamar a classe SetTenantIdSession quando logado. Ver se está correto.
8.7) Modificado o Stub/migration.create.stub para incluir automaticamente a criação da coluna tenant_id quando criar uma migrate
8.8) Modificado o Stub/model.stub para incluir automaticamente o use TenantTable na criação de novas models
8.9) Criado um model Event. Acho que não precisa, pois é apenas para exemplificar que funciona.


PROXIMA AULA
1) Acessar as rotas protegidas



https://www.rfc-editor.org/rfc/rfc7231
+------+-------------------------------+--------------------------+
| Code | Reason-Phrase                 | Defined in...            |
+------+-------------------------------+--------------------------+
| 100  | Continue                      | Section 6.2.1            |
| 101  | Switching Protocols           | Section 6.2.2            |
| 200  | OK                            | Section 6.3.1            |
| 201  | Created                       | Section 6.3.2            |
| 202  | Accepted                      | Section 6.3.3            |
| 203  | Non-Authoritative Information | Section 6.3.4            |
| 204  | No Content                    | Section 6.3.5            |
| 205  | Reset Content                 | Section 6.3.6            |
| 206  | Partial Content               | Section 4.1 of [RFC7233] |
| 300  | Multiple Choices              | Section 6.4.1            |
| 301  | Moved Permanently             | Section 6.4.2            |
| 302  | Found                         | Section 6.4.3            |
| 303  | See Other                     | Section 6.4.4            |
| 304  | Not Modified                  | Section 4.1 of [RFC7232] |
| 305  | Use Proxy                     | Section 6.4.5            |
| 307  | Temporary Redirect            | Section 6.4.7            |
| 400  | Bad Request                   | Section 6.5.1            |
| 401  | Unauthorized                  | Section 3.1 of [RFC7235] |
| 402  | Payment Required              | Section 6.5.2            |
| 403  | Forbidden                     | Section 6.5.3            |
| 404  | Not Found                     | Section 6.5.4            |
| 405  | Method Not Allowed            | Section 6.5.5            |
| 406  | Not Acceptable                | Section 6.5.6            |
| 407  | Proxy Authentication Required | Section 3.2 of [RFC7235] |
| 408  | Request Timeout               | Section 6.5.7            |
| 409  | Conflict                      | Section 6.5.8            |
| 410  | Gone                          | Section 6.5.9            |
| 411  | Length Required               | Section 6.5.10           |
| 412  | Precondition Failed           | Section 4.2 of [RFC7232] |
| 413  | Payload Too Large             | Section 6.5.11           |
| 414  | URI Too Long                  | Section 6.5.12           |
| 415  | Unsupported Media Type        | Section 6.5.13           |
| 416  | Range Not Satisfiable         | Section 4.4 of [RFC7233] |
| 417  | Expectation Failed            | Section 6.5.14           |
| 426  | Upgrade Required              | Section 6.5.15           |
| 500  | Internal Server Error         | Section 6.6.1            |
| 501  | Not Implemented               | Section 6.6.2            |
| 502  | Bad Gateway                   | Section 6.6.3            |
| 503  | Service Unavailable           | Section 6.6.4            |
| 504  | Gateway Timeout               | Section 6.6.5            |
| 505  | HTTP Version Not Supported    | Section 6.6.6            |
+------+-------------------------------+--------------------------+


